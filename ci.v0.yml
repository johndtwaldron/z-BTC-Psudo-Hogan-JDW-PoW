name: CI

on:
  push:
  pull_request:

jobs:
  build-test-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install linters
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck ruby-full
          sudo gem install mdl
          curl -sL https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 -o /usr/local/bin/hadolint
          chmod +x /usr/local/bin/hadolint
      
      - name: Install markdownlint-cli (Node)
        run: |
          npm install -g markdownlint-cli

      - name: Lint Bash (ShellCheck)
        run: |
          if ls scripts/*.sh >/dev/null 2>&1; then
            shellcheck scripts/*.sh
          else
            echo "No bash scripts to lint."
          fi

      - name: Lint Markdown
        run: |
          # Ruby mdl with repo config (keeps parity with .mdlrc)
          mdl -g -c .mdlrc .
          # Also run markdownlint-cli for clearer, Windows-like output
          markdownlint . --config .markdownlint.json

      - name: Lint Dockerfiles (Hadolint)
        run: |
          if ls **/Dockerfile* >/dev/null 2>&1; then
            hadolint **/Dockerfile*
          else
            echo "No Dockerfiles to lint."
          fi

      - name: Build Java (skip tests for speed)
        run: |
          if [ -f java/pom.xml ]; then
            mvn -q -DskipTests package -f java/pom.xml
          else
            echo "No Java pom.xml; skipping."
          fi

      - name: Validate JCL â†” Bash parity
        run: |
          if [ -f jcl/validate.sh ]; then
            bash jcl/validate.sh
          else
            echo "No jcl/validate.sh; skipping."
          fi

  # Optional: E2E job that brings up services and runs the pseudo-JCL jobs
  e2e:
    runs-on: ubuntu-latest
    needs: build-test-lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Docker Compose
        run: docker --version

      - name: Start services (MQ + bitcoind)
        run: |
          if [ -f compose/docker-compose.yaml ]; then
            docker compose -f compose/docker-compose.yaml up -d
            docker compose -f compose/docker-compose.yaml ps
          else
            echo "compose/docker-compose.yaml missing; skipping services start."
          fi

      - name: Wait for services to be healthy and show logs on failure
        run: |
          set -e
          docker compose -f compose/docker-compose.yaml ps || true
          docker compose -f compose/docker-compose.yaml logs --no-color --tail=50 || true

          SERVICE_MQ=mq

          # Wait up to ~5 minutes for IBM MQ to become healthy
          for i in $(seq 1 60); do
            CID=$(docker compose -f compose/docker-compose.yaml ps -q "$SERVICE_MQ")
            if [ -z "$CID" ]; then
              echo "$SERVICE_MQ container not found yet (attempt $i)."
              sleep 5
              continue
            fi
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' "$CID" 2>/dev/null || echo "none")
            echo "$SERVICE_MQ health status: $STATUS"
            if [ "$STATUS" = "healthy" ]; then
              echo "$SERVICE_MQ is healthy."
              exit 0
            fi
            sleep 5
          done

          echo "$SERVICE_MQ failed to become healthy; dumping logs and ps:"
          docker compose -f compose/docker-compose.yaml logs --no-color --tail=500 "$SERVICE_MQ" || true
          docker compose -f compose/docker-compose.yaml ps --all || true
          exit 1

      - name: Build Java
        run: |
          if [ -f java/pom.xml ]; then
            mvn -q -DskipTests package -f java/pom.xml
          else
            echo "No Java pom.xml; skipping."
          fi

      - name: Build COBOL (dockerized) 
        run: |
          if [ -f cobol/build.sh ]; then
            bash cobol/build.sh
          else
            echo "cobol/build.sh missing; skipping COBOL build."
          fi

      - name: Run HBANKTRX job
        run: |
          if [ -f scripts/hbanktrx.sh ]; then
            bash scripts/hbanktrx.sh
          else
            echo "scripts/hbanktrx.sh missing; skipping."
          fi

      - name: Run HSETTLE job
        run: |
          if [ -f scripts/hsettle.sh ]; then
            bash scripts/hsettle.sh
          else
            echo "scripts/hsettle.sh missing; skipping."
          fi

      - name: Run HFINAL job
        run: |
          if [ -f scripts/hfinal.sh ]; then
            bash scripts/hfinal.sh
          else
            echo "scripts/hfinal.sh missing; skipping."
          fi

      - name: Upload audit artifact
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: cobol/data/audit_report.txt
          if-no-files-found: warn
